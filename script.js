// Assignment Code
var generateBtn = document.querySelector("#generate"); //This, and things like this, pick the first thing with the ID in the document. And since you are smart, and keep IDs unique, it will find your desired element without fail.

// Write password to the #password input
function writePassword() {
  var password = generatePassword(); //This assigns our password generated by the second function to the password variable local to this function.
  var passwordText = document.querySelector("#password");
  passwordText.value = password; //This turns the text on the page into the password.

}

function generatePassword(){
  var characterString = ""
  var numberOfCharacters = prompt("How many characters do you want in this password? \n Between 8-128 required.") //Pop up a query, asking how many characters they want in their password.
  if (numberOfCharacters > 128 || numberOfCharacters < 8 || isNaN(numberOfCharacters)){
    alert("I'm afraid I can't do that, Dave. \n (Invalid amount of characters. A digital number between 8-128 is required.)"); //If user enters ineligible input (Too many/few characters, or a non-number), alert an error and stop.
    return "";
  }
  var lowerCharacters = confirm("Do you want to include lower-case characters?");
  var upperCharacters = confirm("Do you want to include upper-case characters?");
  var numeralCharacters = confirm("Do you want to include numbers?");
  var specialCharacters = confirm("Do you want to include special characters?");
  var result = "";

  if (lowerCharacters){
    characterString = characterString + "abcdefghijklmnopqrstuvwxyz";
  }
  if (upperCharacters){
    characterString = characterString + "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  }
  if (numeralCharacters){
    characterString = characterString + "1234567890";
  }
  if (specialCharacters){
    characterString = characterString + "`~!@#$%^&*()-_=+|[]{};':?/";
  }
  if (characterString.length == 0){
    alert("We don't have any characters to work with, so we can't make a password.");
    return "";
  }

  for (i = 1; i <= numberOfCharacters; i++) {
    result = result + characterString.charAt(Math.floor(Math.random() * characterString.length));
  }
  return result;
}

// Add event listener to generate button
generateBtn.addEventListener("click", writePassword);

//what we're aiming to do here is basically to have a set of character strings/arrays to choose from, each in its own if, powered by a confirm.
//Uppercase letters, lowercase letters, numbers, special characters.
//If the user answers yes to one, append that string to the big string you will use to draw characters from. Probably have an answer for smart-aleks that want to say no to them all.
//Then, make a password, character by character, up to the number of characters specified. Append each one to the string that will be passed back.